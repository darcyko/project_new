version: 0.2

phases:
  install:
    commands:
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2&
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 905418067047.dkr.ecr.us-east-1.amazonaws.com
      - darcyko-atul=905418067047.dkr.ecr.us-east-1.amazonaws.com/darcyko-atul:latest
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}


  build:
    commands:
      - echo Build started on `date`
      - python -V
      - echo $CODEBUILD_SRC_DIR
      - pwd
      - env > .env
      - ls -larth
    
      #Nginx Image Building
      - echo Build started on `date`
      - echo Building the Ningx Docker image...
      - docker build -t darcyko-atul:latest -f Dockerfile .
      - docker tag darcyko-atul:latest $darcyko-atul:$IMAGE_TAG
      
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker image ls -a
      
      #- docker push $REPOSITORY_URI:$VERSION
      - docker push darcyko-atul:latest
      - docker push $darcyko-atul:$IMAGE_TAG
      
      - printf '[{"imageUri":"%s"}]' $darcyko-atul:$IMAGE_TAG > imageDetail.json
      - printf '[{"name":"darcyko-atul","imageUri":"%s"}]' $darcyko-atul:$IMAGE_TAG  > imagedefinitions.json
      - pwd
      
artifacts:
    files: 
      - imagedefinitions.json
